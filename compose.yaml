version: "3.8"

services:
  db:
    image: postgres
    container_name: db
    restart: always
    ports:
      - 5432:5432   
    environment:
      - POSTGRES_USER=cool_user
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=cool_db
    volumes:
      - ./pData:/var/lib/postgresql/data
    healthcheck:      
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -t 1"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s

  redis:
    image: redis:7-alpine

  ngrok:
        image: ngrok/ngrok:latest
        restart: unless-stopped
        command:
          - "start"
          - "httpbin"
          - "--config"
          - "/etc/ngrok.yml"
        volumes:
          - ./ngrok.yml:/etc/ngrok.yml
        ports:
          - 4040:4040

  nginx:
    build: ./nginx
    volumes:
      - ./chat/static:/static
    ports:
      - "80:80"
    depends_on:
      - web

  web:
    build: .
    volumes:
      - ./chat/migrations:/app/chat/migrations
      - ./chat/static:/static
    ports:
      - 8000:8000
    depends_on:
      - db
      - redis  
    links: 
        - db
        - redis

    develop:
      watch:
        # it'll watch for changes in package.json and package-lock.json and rebuild the container if there are any changes
        - path: ./requirements.txt
          action: rebuild
        - path: ./chat
          target: /app/chat
          action: sync
        - path: ./core
          target: /app/core
          action: sync
        - path: ./home
          target: /app/home
          action: sync


